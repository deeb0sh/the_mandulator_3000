export default async function getNetwork(fastify, user, serverName) {
    try {
        fastify.log.info(`üì• [getNetwork] –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Å–µ—Ç–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user}, —Å–µ—Ä–≤–µ—Ä: ${serverName}`);

        const userRoleLimit = await fastify.prisma.users.findUnique({
            where: {
                login: user
            },
            select: {
                role: true
            }
        });
        fastify.log.info(`üìä [getNetwork] –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userRoleLimit.role.name}, —Ä–∞–∑–º–µ—Ä –ø–æ–¥—Å–µ—Ç–∏: /${userRoleLimit.role.networkReserv}`);

        const userNetworkReserv = userRoleLimit.role.networkReserv;

        const serverNetwork = await fastify.prisma.server.findMany({
            select: {
                serverName: true,
                lan: true
            }
        });
        fastify.log.info(`üåê [getNetwork] –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤: ${serverNetwork.length}`);

        const serverMap = new Map(
            serverNetwork.map(server => [server.serverName, server.lan])
        );

        const normalizedServerName = serverName.toUpperCase();
        const rawLan = serverMap.get(normalizedServerName);
        const lan = rawLan.replace(/"/g, "") // —É–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞–≤—ã—á–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        fastify.log.info(`üîç [getNetwork] LAN –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ ${normalizedServerName}: ${lan}`);
        const [ip, mask] = lan.split("/");
        const serverIpRange = 2 ** (32 - Number(mask));
        const userIpRange = 2 ** (32 - Number(userNetworkReserv));
        const octRange = serverIpRange / 256;

        const [oct1, oct2, oct3] = ip.split(".").map(Number);
        const maxOct = oct3 + octRange;

        const allNetworks = [];
        for (let i = oct3; i < maxOct; i++) {
            for (let oct4 = 0; oct4 < 256; oct4 += userIpRange) {
                allNetworks.push(`${oct1}.${oct2}.${i}.${oct4}/${userNetworkReserv}`);
            }
        }

        fastify.log.info(`‚úÖ [getNetwork] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥—Å–µ—Ç–µ–π: ${allNetworks.length} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ ${normalizedServerName}`);
        return allNetworks;
    } catch (e) {
        fastify.log.error(`üî• [getNetwork] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥—Å–µ—Ç–µ–π –¥–ª—è ${user} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${serverName}:`, e);
    }
}
