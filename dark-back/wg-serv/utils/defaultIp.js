export default async function defIp(fastify, serverName) {
    fastify.log.info(`üì• [defIp] –ó–∞–ø—Ä–æ—Å IP –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞: ${serverName}`)
    const serverDb = await fastify.prisma.server.findFirst({
        where: { 
            serverName: serverName  // –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é
        },
        select: {
            lan: true
        }    
    })
    fastify.log.info(`üì¶ [defIp] –ü–æ–ª—É—á–µ–Ω LAN –∏–∑ –ë–î: ${serverDb.lan}`)

    const serverIp = serverDb.lan.replace(/\/.*/, '').replace(/"/g, '') // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ—Å–ª–µ "/" –∏ –≤—Å–µ –∫–∞–≤—ã—á–∫–∏
    
    fastify.log.info(`üõ†Ô∏è [defIp] IP –±–µ–∑ –º–∞—Å–∫–∏ –∏ –∫–∞–≤—ã—á–µ–∫: ${serverIp}`)
    
    let [oc1, oc2, oc3, oc4] = serverIp.split(".").map(Number)
    oc4++
    let ipServ = `${oc1}.${oc2}.${oc3}.${oc4}`
    fastify.log.info(`‚úÖ [defIp] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π IP: ${ipServ}`);
    return ipServ;
}
