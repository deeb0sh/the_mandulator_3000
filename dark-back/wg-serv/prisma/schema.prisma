generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ServerName {
  RU
  DE
  FI
}

model UserSubnet {
  id          Int        @id @default(autoincrement())
  user        Users      @relation(fields: [userId], references: [id])
  userId      Int
  network     String     // Например "10.11.0.0/29"
  serverName  ServerName // enum (RU, DE, FI)

  createdAt   DateTime   @default(now())

  @@unique([userId, serverName]) // У одного пользователя одна подсеть на тип сервера
}

model Role {
  id            Int      @id // id роли 0 1 2 3
  name          String?  @unique // имя роли
  speed         Int?     // ограничение пропускной способности роли
  network       Int?     // размер сети роли
  networkReserv Int      @default(28) // Резервирование сети
  users         Users[]  // Пользователи с данной ролью
}

model Users {
  id          Int     @id @default(autoincrement())
  login       String? @unique
  roleId      Int?
  role        Role?   @relation(fields: [roleId], references: [id])

  subnets     UserSubnet[]  // Подсети, связанные с пользователем
  clients     Client[]      // Все клиенты, принадлежащие пользователю

  @@map("users")
  @@index([roleId])
}

model Server {
  id         Int     @id @default(autoincrement())
  serverName ServerName  // Тип сервера (RU, DE, FI)
  lan        String      // IP адрес с маской подсети (например, "10.11.0.0/16")
  publicKey  String
  privatKey  String
  port       Int         @default(51820)  // Порт по умолчанию
  createdAt  DateTime    @default(now())

  clients    Client[]    // Все клиенты могут быть привязаны к одному серверу
}

model Client {
  id         Int         @id @default(autoincrement())
  name       String
  ip         String
  publicKey  String
  privateKey String
  endPoint   String
  allowIps   String      @default("0.0.0.0/0")
  dns        String      @default("45.142.122.244, 77.221.159.104")
  createdAt  DateTime    @default(now())

  serverId   Int         // тип должен быть Int, соответствующий типу id в Server
  serverName ServerName  // Тип сервера (RU, DE, FI)
  server     Server      @relation(fields: [serverId], references: [id]) // Связь с сервером
  userId     Int         // Связь с пользователем
  user       Users       @relation(fields: [userId], references: [id])  // Пользователь, которому принадлежит клиент
}
